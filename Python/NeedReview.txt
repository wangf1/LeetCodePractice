Need review:

1. LC98
2. LC773
3. LC200
4. LC746 How to find the sub-problem of DP
5. LC424
6. LC394 Stack approach is better than recursive
7. LC43 mathematical approach how to calculate multiply
8. LC19 Leverage dummy node with two pointer can eliminate edge cases
9. LC234 fast-slow pointers for linked list problem
10. LC110 & LC543 DFS with multiple return values
11. LC437
12. LC101_symmetric_tree ---- Find the recursion structure
13. 112. Path Sum ------ In the iterative solution, the stack element is a tuple that contains both node and parent value.
14. LC236_Lowest_Common_Ancestor_of_a_Binary_Tree.py ----- Find the recursion structure
15. LC752_Open_the_Lock.py ------ Figure out structured way to attempt the lock
16. LC279_Perfect_Squares.py ----- find the virtual tree, and use BFS to solve the issue
17. LC155_Min_Stack.py ----- Space for time
18. LC739_Daily_Temperatures.py ------- Monotonic Stack: Keep the stack Monotonically increasing/decreasing
19. LC494_Target_Sum.py ------- Use memo
20. LC21_Merge_Two_Sorted_Lists.py --- find the recursion structure
21. LC95_Unique_Binary_Search_Trees_II.py -- --- find the recursion structure
22. LC52_N-Queens_II.py ------- backtracking
23. LC489_Robot_Room_Cleaner.py ----- backtracking
24. LC37_Sudoku_Solver.py ----- backtracking template
25. LC77_Combinations.py ------ backtracking approach
26. LC22_Generate_Parentheses.py --------- backtracking
27. LC26_Remove_Duplicates_from_Sorted_Array.py --- Find the correct two pointer paradigm
28. LC136_Single_Number.py ------bit operation
29. LC48_Rotate_Image.py ------  transpose matrix and reflect matrix
30. LC108_Convert_Sorted_Array_to_Binary_Search_Tree.py -------- boundary condition should be aware
31. LC88_Merge_Sorted_Array.py --------- from end to beginning is a good idea
32. LC53_Maximum_Subarray.py  ------- Did not find solution
